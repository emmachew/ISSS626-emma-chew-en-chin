---
title: "Hands-on Exercise 4"
author: "Emma Chew En Chin"
date: "Sep 4, 2025"
date-modified: "last-modified"
format: html
execute: 
  echo: true
  eval: true
  warning: false
  freeze: true
---

## 1 Overview

**Spatial Point Pattern Analysis (SPPA)** - The pattern or distribution of a set of points on a surface.

**Second-Order SPPA (2nd-SPPA)** - Spatial relationships between points in a pattern.

Objectives of this analysis:

-   Are the childcare centres in Singapore randomly distributed throughout the country?
-   If not, then where are the locations with higher concentration of childcare centres?

Launching four R packages below:

```{r}
pacman::p_load(sf, spatstat, tmap, tidyverse, rvest)
```

## 2 Data Import and Preparation

Importing the MasterPlan2019 data, which is used to map the polygons of Singapore map.

```{r}
mpsz_sf <- st_read("data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml") %>% 
  st_zm(drop = TRUE, what = "ZM") %>% st_transform(crs = 3414)
```

```{r}
extract_kml_field <- function(html_text, field_name) {
  if (is.na(html_text) || html_text == "") return(NA_character_)
  
  page <- read_html(html_text)
  rows <- page %>% html_elements("tr")
  
  value <- rows %>%
    keep(~ html_text2(html_element(.x, "th")) == field_name) %>%
    html_element("td") %>%
    html_text2()
  
  if (length(value) == 0) NA_character_ else value
}
```

```{r}
mpsz_sf <- mpsz_sf %>%
  mutate(
    REGION_N = map_chr(Description, extract_kml_field, "REGION_N"),
    PLN_AREA_N = map_chr(Description, extract_kml_field, "PLN_AREA_N"),
    SUBZONE_N = map_chr(Description, extract_kml_field, "SUBZONE_N"),
    SUBZONE_C = map_chr(Description, extract_kml_field, "SUBZONE_C")
  ) %>%
  select(-Name, -Description) %>%
  relocate(geometry, .after = last_col())
```

```{r}
mpsz_cl <- mpsz_sf %>%
  filter(SUBZONE_N != "SOUTHERN GROUP",
         PLN_AREA_N != "WESTERN ISLANDS",
         PLN_AREA_N != "NORTH-EASTERN ISLANDS")

```

```{r}
write_rds(mpsz_cl, 
          "data/geospatial/mpsz_cl.rds")
```

```{r}
pg <- mpsz_cl %>%
  filter(PLN_AREA_N == "PUNGGOL")
tm <- mpsz_cl %>%
  filter(PLN_AREA_N == "TAMPINES")
ck <- mpsz_cl %>%
  filter(PLN_AREA_N == "CHOA CHU KANG")
jw <- mpsz_cl %>%
  filter(PLN_AREA_N == "JURONG WEST")
```

```{r}
par(mfrow=c(2,2), mar=c(2,2,2,1))
plot(st_geometry(pg), main = "Punggol")
plot(st_geometry(tm), main = "Tampines")
plot(st_geometry(ck), main = "Choa Chu Kang")
plot(st_geometry(jw), main = "Jurong West")
```

Create owin objects

```{r}
pg_owin = as.owin(pg)
tm_owin = as.owin(tm)
ck_owin = as.owin(ck)
jw_owin = as.owin(jw)
```

Importing the childcare service data that serves as the spatial point pattern data.

```{r}
childcare_sf <- st_read("data/geospatial/ChildCareServices.kml") %>% 
  st_zm(drop = TRUE, what = "ZM") %>%
  st_transform(crs = 3414)
```

Converting sf data frames to ppp class.

```{r}
childcare_ppp <- as.ppp(childcare_sf)
```

```{r}
class(childcare_ppp)
```

Combining points events objects and owin objects.

```{r}
childcare_pg_ppp = childcare_ppp[pg_owin]
childcare_tm_ppp = childcare_ppp[tm_owin]
childcare_ck_ppp = childcare_ppp[ck_owin]
childcare_jw_ppp = childcare_ppp[jw_owin]
```

Using `rescale.ppp()` to transform the unit of measurement from metre to kilometre.

```{r}
childcare_pg_ppp.km = rescale.ppp(childcare_pg_ppp, 1000, "km")
childcare_tm_ppp.km = rescale.ppp(childcare_tm_ppp, 1000, "km")
childcare_ck_ppp.km = rescale.ppp(childcare_ck_ppp, 1000, "km")
childcare_jw_ppp.km = rescale.ppp(childcare_jw_ppp, 1000, "km")
```

Plotting the four study areas.

```{r}
par(mfrow=c(2,2), mar=c(2,2,2,1))
plot(unmark(childcare_pg_ppp.km), 
  main="Punggol")
plot(unmark(childcare_tm_ppp.km), 
  main="Tampines")
plot(unmark(childcare_ck_ppp.km), 
  main="Choa Chu Kang")
plot(unmark(childcare_jw_ppp.km), 
  main="Jurong West")
```

## 3 Analysing Spatial Point Process Using G-Function

**G function**: Measures the distribution of the distances from an arbitrary event to its nearest event.

`Gest()` : Computes G-function estimation `envelope()` : Performs monte carlo simulation test

### 3.1 Choa Chu Kang planning area

#### 3.1.1 Computing G-function estimation

```{r}
set.seed(1234)
```

```{r}
G_CK = Gest(childcare_ck_ppp, correction = "border")
plot(G_CK, xlim=c(0,500))
```

Since $G_{\text{bord}}(r)$ is above $G_{\text{pois}}(r)$ there may be a clustering pattern observed. However, it is still close to the $G_{\text{pois}}(r)$ line.

#### 3.1.2 Performing Complete Spatial Randomness Test

To confirm our findings, a hypothesis test will be conducted:

Ho = The distribution of childcare services at Choa Chu Kang are randomly distributed.

H1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.

The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

Conducting Monte Carlo test with G-function:

```{r}
G_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)
```

```{r}
plot(G_CK.csr)
```

$G_{\text{obs}}(r)$ (Black solid line): The observed G-function from the actual data

$G_{\text{theo}}(r)$ (Red solid line): The theoretical G-function for Complete Spatial Randomness (CSR)

$G_{\text{hi}}(r)$ and $G_{\text{lo}}(r)$ (Grey envelope): The simulation envelope from Monte Carlo simulations

As $G_{\text{obs}}(r)$ stays within the grey envelope, the point pattern is not significantly different from random (CSR). Any deviations could be due to chance.

### 3.2 Tampines planning area

#### 3.2.1 Computing G-function estimation

```{r}
G_tm = Gest(childcare_tm_ppp, correction = "best")
plot(G_tm)
```

The gap between $G_{\text{bord}}(r)$ and $G_{\text{pois}}(r)$ is wider, and there is higher likelihood that a clustering pattern observed.

#### 3.2.2 Performing Complete Spatial Randomness Test

To confirm our findings, a hypothesis test will be conducted:

Ho = The distribution of childcare services at Tampines are randomly distributed.

H1= The distribution of childcare services at Tampines are not randomly distributed.

The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

Conducting Monte Carlo test with G-function:

```{r}
G_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = "all", nsim = 999)
```

```{r}
plot(G_tm.csr)
```

As $G_{\text{obs}}(r)$ is above the grey envelope, clustering is observed.

## 4 Analysing Spatial Point Process Using F-Function

**F function**: Measures the voids/empty spaces in the point pattern. Rapid increase in F(r) means small empty spaces (clustering), while slow rise in F(r) means large empty spaces (regularity).

Comparing G-function to F-function:

-   G-function: Distance from points to nearest neighbors
-   F-function: Distance from random locations to nearest points

`Fest()` : Computes F-function estimation 
`envelope()` : Performs monte carlo simulation test

### 4.1 Choa Chu Kang planning area

#### 4.1.1 Computing F-function estimation

```{r}
F_CK = Fest(childcare_ck_ppp)
plot(F_CK)
```

$F_{km}(r)$ is below $F_{pois}(r)$, indicating that it is a regular/uniform pattern, as random locations are further from the points than expected in CSR.

#### 4.1.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

Ho = The distribution of childcare services at Choa Chu Kang are randomly distributed.

H1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.

The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

Monte Carlo test with F-function

```{r}
F_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)
```

```{r}
plot(F_CK.csr)
```

As $F_{\text{obs}}(r)$ stays within the grey envelope, the point pattern is not significantly different from random (CSR). Any deviations could be due to chance.

### 4.2 Tampines planning area

#### 4.2.1 Computing F-function estimation

```{r}
F_tm = Fest(childcare_tm_ppp, correction = "best")
plot(F_tm)
```

As $F_{\text{km}}(r)$ is much lower than $F_{\text{pois}}(r)$, this indicates that the point pattern is showing strong clustering.

#### 4.2.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

Ho = The distribution of childcare services at Tampines are randomly distributed.

H1= The distribution of childcare services at Tampines are not randomly distributed.

The null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.

```{r}
F_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = "all", nsim = 999)
```

```{r}
plot(F_tm.csr)
```

The $F_{\text{obs}}(r)$ line goes below the envelope, indicating that the points are clustered.

## 5 Analysing Spatial Point Process Using K-Function

**K function**: Measures the number of events found up to a given distance of any particular event.

`Kest()` : Computes K-function estimation 
`envelope()` : Performs monte carlo simulation test

### 5.1 Choa Chu Kang planning area

#### 5.1.1 Computing K-function estimation

```{r}
K_ck = Kest(childcare_ck_ppp, correction = "Ripley")
plot(K_ck, . -r ~ r, ylab= "K(d)-r", xlab = "d(m)")
```

$K_{\text{iso}}(r)$ rises above the $K_{\text{pois}}(r)$ line, indicating potential clustering. The increasing difference by distance suggest large cluster sizes.

#### 5.1.2 Performing Complete Spatial Randomness Test
To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

Ho = The distribution of childcare services at Choa Chu Kang are randomly distributed.

H1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.

The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

```{r}
K_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(K_ck.csr, . - r ~ r, xlab="d", ylab="K(d)-r")
```

$K_{\text{obs}}(r)$ stays within the grey envelope, indicating that the clustering is not as significant.

### 5.2 Tampines planning area

#### 5.2.1 Computing K-function estimation

```{r}
K_tm = Kest(childcare_tm_ppp, correction = "Ripley")
plot(K_tm, . -r ~ r, 
     ylab= "K(d)-r", xlab = "d(m)", 
     xlim=c(0,1000))
```

$K_{\text{iso}}(r)$ rises above the $K_{\text{pois}}(r)$ line, indicating potential clustering. The increasing difference by distance suggest large cluster sizes.

#### 5.2.2 Computing K-function estimation

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

Ho = The distribution of childcare services at Tampines are randomly distributed.

H1= The distribution of childcare services at Tampines are not randomly distributed.

The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

```{r}
K_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(K_tm.csr, . - r ~ r, 
     xlab="d", ylab="K(d)-r", xlim=c(0,500))
```

$K_{\text{obs}}(r)$ rises above the grey envelope, and we can observe clustering.

## 6 Analysing Spatial Point Process Using L-Function

**L function**: Is a transformation of the K-function that makes it easier to interpret spatial point patterns.

`Lest()` : Computes L-function estimation 
`envelope()` : Performs monte carlo simulation test

### 6.1 Choa Chu Kang planning area

#### 6.1.1 Computing L-function estimation

```{r}
L_ck = Lest(childcare_ck_ppp, correction = "Ripley")
plot(L_ck, . -r ~ r, 
     ylab= "L(d)-r", xlab = "d(m)")
```

$L_{\text{iso}}(r)$ is above the $L_{\text{pois}}(r)$ line, signifying potential clustering.

#### 6.1.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

Ho = The distribution of childcare services at Choa Chu Kang are randomly distributed.

H1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.

The null hypothesis will be rejected if p-value if smaller than alpha value of 0.001.

```{r}
L_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(L_ck.csr, . - r ~ r, xlab="d", ylab="L(d)-r")
```

$L_{\text{obs}}(r)$ goes above the envelope in short distances, indicating some localised clustering.

### 6.2 Tampines planning area

#### 6.2.1 Computing L-function estimation

```{r}
L_tm = Lest(childcare_tm_ppp, correction = "Ripley")
plot(L_tm, . -r ~ r, 
     ylab= "L(d)-r", xlab = "d(m)", 
     xlim=c(0,1000))
```
$L_{\text{iso}}(r)$ goes above $L_{\text{pois}}(r)$, showing high likelihood of clustering.

#### 6.2.2 Performing Complete Spatial Randomness Test

To confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:

Ho = The distribution of childcare services at Tampines are randomly distributed.

H1= The distribution of childcare services at Tampines are not randomly distributed.

The null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.

```{r}
L_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
```

```{r}
plot(L_tm.csr, . - r ~ r, 
     xlab="d", ylab="L(d)-r", xlim=c(0,500))
```

$L_{\text{obs}}(r)$ goes above the grey envelope for all distances, indicating that there is a strong clustering at every distance scale.
